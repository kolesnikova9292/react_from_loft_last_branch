{"version":3,"sources":["logo.svg","providers/redux/modules/auth/actions.js","providers/redux/modules/auth/reducer.js","providers/redux/modules/auth/selectors.js","header/Header.js","providers/redux/modules/routes/actions.js","providers/redux/modules/routes/reducer.js","providers/redux/modules/routes/selectors.js","pages/map/functionForRoute.js","pages/map/MapField.js","providers/redux/modules/adresses/actions.js","providers/redux/modules/adresses/reducer.js","providers/redux/modules/adresses/selectors.js","pages/map/InnerMap.js","pages/map/FormForPoints.js","pages/map/GoToPersonalArea.js","providers/redux/modules/bankCard/selectors.js","providers/redux/modules/bankCard/actions.js","providers/redux/modules/bankCard/reducer.js","pages/map/Map.js","pages/personal_area/PersonalAreaForm.js","pages/personal_area/index.js","pages/login/LoginForm.js","pages/login/index.js","pages/registration/RegistrationForm.js","pages/registration/index.js","pages/PrivateRoute.js","pages/ChoosePage.js","App.js","serviceWorker.js","providers/redux/modules/index.js","providers/redux/modules/auth/authorizationSaga .js","providers/redux/modules/auth/registrationSaga.js","providers/redux/modules/bankCard/paymentSaga.js","providers/redux/modules/adresses/addressListSaga.js","providers/redux/modules/routes/routeSaga.js","providers/redux/modules/saga.js","providers/redux/store.js","index.js"],"names":["module","exports","fetchAuthRequest","createAction","fetchAuthSucces","fetchAuthFailure","logoutUser","fetchRegistrationRequest","fetchRegistrationSucces","fetchRegistrationFailure","token","handleActions","_state","action","payload","data","isAuthorized","error","combineReducers","getToken","state","auth","getAuthFlag","getError","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appbar","backgroundColor","connect","props","classes","className","AppBar","position","Toolbar","edge","color","aria-label","Typography","variant","Button","component","Link","to","id","data-testid","fetchForRoute","fetchForRouteSuccess","fetchForRouteFail","fetchForRouteClean","fetchForRouteCleanSuccess","route","getRoute","drawRoute","map","coordinates","flyTo","center","zoom","getLayer","removeLayer","getSource","removeSource","addLayer","type","source","properties","geometry","layout","paint","useState","latitude","longitude","bearing","pitch","viewport","setViewport","mapRef","React","createRef","useEffect","setTimeout","current","getMap","ref","width","height","mapStyle","onViewportChange","mapboxApiAccessToken","document","body","style","margin","fetchForListOfAdresses","fetchForListOfAdressesSuccess","fetchForListOfAdressesFail","adresses","addresses","getAdresses","InnerMap","point","handleOfChangePoint","listOfObjects","nameOfLabel","mark","pointMy","setPointMy","value","setValue","inputValue","setInputValue","x","adress","indexOf","localStorage","setItem","Autocomplete","onChange","event","newValue","onInputChange","newInputValue","options","renderInput","params","TextField","label","mapDispatchToProps","adressList","first_point","setFirstPoint","second_point","setSecondPoint","setAdressListWithKey","adressListWithKeyForFirstPoint","setAdressListWithKeyForFirstPoint","adressListWithKeyForSecondPoint","setAdressListWithKeyForSecondPoint","getPointsFromForm","a","getItem","fetchAdresses","resultOfMap","index","key","object","filter","onSubmit","preventDefault","GoToPersonalArea","getCardNumber","bankCard","number","getCardValidity","validity","getCardOwner","owner","getCardCVC","cvc","getAllCard","fetchBankCardInformation","fetchBankCardInformationSuccess","fetchBankCardInformationFail","fetchRegistrateMyBankCard","fetchRegistrateMyBankCardSuccess","fetchRegistrateMyBankCardFail","cardNumber","expiryDate","cardName","fetchBankCardData","fetchForRouteRequest","returnError","undefined","useForm","register","handleSubmit","errors","reset","open","setOpen","flag","setFlag","messageFromServer","setMessageFromServer","length","handleCardParams","history","push","Card","as","e","target","match","replace","substring","join","rules","required","pattern","helperText","name","toUpperCase","Snackbar","anchorOrigin","vertical","horizontal","onClose","ContentProps","message","PersonalArea","goAway","window","confirm","removeItem","handleLogIn","login","password","onClick","Login","handleRegistration","firstname","lastname","email","surname","inputRef","Registration","PrivateRoute","RouteComponent","loginPath","rest","render","routeProps","path","Map","exact","App","Boolean","location","hostname","authorizationSaga","authGeneratorFunction","takeEvery","call","fetchAuthRequestFirst","result","success","put","axios","post","headers","registrationSaga","registratinGenerator","fetchRegistrationRequestFirst","paymentSaga","generatorForPaymentSagaGetInformation","geteratorForPaymentSaga","fetchBankCardInformationGetInfoAxios","status","fetchBankCardInformationRegistrateAxios","json_result","JSON","parse","config","get","addressListSaga","generatorForAdressList","fetchAdressListAxios","routeSaga","generatorForRoute","generatorForCleanRoute","fetchForRouteAxios","point1","point2","Sagas","all","sagaMiddleware","createSagaMiddleware","initialState","store","createStore","rootReducer","compose","applyMiddleware","thunk","run","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d10ca446.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { createAction } from \"redux-actions\";\r\n\r\nexport const fetchAuthRequest = createAction(\"GET_AUTH_REQUEST\");\r\nexport const fetchAuthSucces = createAction(\"GET_AUTH_SUCCESS\");\r\nexport const fetchAuthFailure = createAction(\"GET_AUTH_FAILURE\");\r\nexport const logoutUser = createAction(\"LOGOUT_USER\");\r\n\r\nexport const fetchRegistrationRequest = createAction(\r\n  \"GET_REGISTRATION_REQUEST\"\r\n);\r\nexport const fetchRegistrationSucces = createAction(\"GET_REGISTRATION_SUCCESS\");\r\nexport const fetchRegistrationFailure = createAction(\r\n  \"GET_REGISTRATION_FAILURE\"\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  fetchAuthSucces,\r\n  fetchAuthFailure,\r\n  logoutUser,\r\n  fetchRegistrationFailure,\r\n  fetchRegistrationSucces,\r\n} from \"./actions\";\r\n\r\nconst token = handleActions(\r\n  {\r\n    [fetchAuthSucces]: (_state, action) => action.payload.data.token,\r\n    [fetchAuthFailure]: () => null,\r\n    [fetchRegistrationSucces]: (_state, action) => action.payload.data.token,\r\n    [fetchRegistrationFailure]: () => null,\r\n    [logoutUser]: () => null,\r\n  },\r\n  null\r\n);\r\n\r\nconst isAuthorized = handleActions(\r\n  {\r\n    [fetchAuthSucces]: () => true,\r\n    [fetchRegistrationSucces]: () => true,\r\n    [fetchAuthFailure]: () => false,\r\n    [fetchRegistrationFailure]: () => false,\r\n    [logoutUser]: () => false,\r\n  },\r\n  false\r\n);\r\n\r\nconst error = handleActions(\r\n  {\r\n    [fetchAuthFailure]: (_state, action) => action.payload,\r\n    [fetchRegistrationFailure]: (_state, action) => action.payload,\r\n    [fetchAuthSucces]: () => null,\r\n    [fetchRegistrationSucces]: () => null,\r\n    [logoutUser]: () => null,\r\n  },\r\n  null\r\n);\r\n\r\nexport default combineReducers({\r\n  token,\r\n  isAuthorized,\r\n  error,\r\n});\r\n","export const getToken = state => state.auth.token;\r\nexport const getAuthFlag = state => state.auth.isAuthorized;\r\nexport const getError = state => state.auth.error;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Logo } from \"loft-taxi-mui-theme\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAuthFlag } from \"../providers/redux/modules/auth\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appbar: {\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n}));\r\n\r\nconst Header = props => {\r\n  const classes = useStyles();\r\n  const { isAuthorized } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Logo edge=\"start\" color=\"inherit\" aria-label=\"menu\"></Logo>\r\n          <Typography variant=\"h6\" className={classes.title}></Typography>\r\n          {isAuthorized === true ? (\r\n            <>\r\n              <Button component={Link} to=\"/map\" id=\"my-map\">\r\n                Карта\r\n              </Button>\r\n              <Button\r\n                component={Link}\r\n                to=\"/personal\"\r\n                id=\"personal-area\"\r\n                data-testid=\"personal-area\"\r\n              >\r\n                Профиль\r\n              </Button>\r\n              <Button component={Link} to=\"/logout\" id=\"logout\">\r\n                Выйти\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Button component={Link} to=\"/login\" id=\"login\">\r\n              Войти\r\n            </Button>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthorized: getAuthFlag(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import { createAction } from \"redux-actions\";\r\n\r\nexport const fetchForRoute = createAction(\"GET_ROUTE\");\r\nexport const fetchForRouteSuccess = createAction(\"GET_ROUTE_SUCCESS\");\r\nexport const fetchForRouteFail = createAction(\"GET_ROUTE__FAIL\");\r\nexport const fetchForRouteClean = createAction(\"GET_ROUTE__CLEAN\");\r\nexport const fetchForRouteCleanSuccess = createAction(\r\n  \"GET_ROUTE__CLEAN_SUCCESS\"\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport {\r\n  fetchForRouteSuccess,\r\n  fetchForRouteFail,\r\n  fetchForRouteCleanSuccess,\r\n} from \"./actions\";\r\nimport { logoutUser } from \"../auth/actions\";\r\n\r\nconst route = handleActions(\r\n  {\r\n    [fetchForRouteSuccess]: (_state, action) => action.payload.data,\r\n    [fetchForRouteFail]: () => null,\r\n    [fetchForRouteCleanSuccess]: () => null,\r\n    [logoutUser]: () => null,\r\n  },\r\n  null\r\n);\r\n\r\nexport default route;\r\n","export const getRoute = state => state.route;\r\n","export const drawRoute = (map, coordinates) => {\r\n  map.flyTo({\r\n    center: coordinates[0],\r\n    zoom: 15,\r\n  });\r\n\r\n  if (map.getLayer(\"route\")) {\r\n    map.removeLayer(\"route\");\r\n  }\r\n\r\n  if (map.getSource(\"route\")) {\r\n    map.removeSource(\"route\");\r\n  }\r\n\r\n  map.addLayer({\r\n    id: \"route\",\r\n    type: \"line\",\r\n    source: {\r\n      type: \"geojson\",\r\n      data: {\r\n        type: \"Feature\",\r\n        properties: {},\r\n        geometry: {\r\n          type: \"LineString\",\r\n          coordinates,\r\n        },\r\n      },\r\n    },\r\n    layout: {\r\n      \"line-join\": \"round\",\r\n      \"line-cap\": \"round\",\r\n    },\r\n    paint: {\r\n      \"line-color\": \"#ffc617\",\r\n      \"line-width\": 8,\r\n    },\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MapGL from \"react-map-gl\";\r\nimport { connect } from \"react-redux\";\r\nimport { getRoute } from \"../../providers/redux/modules/routes\";\r\nimport { drawRoute } from \"./functionForRoute\";\r\n\r\nconst MAPBOX_TOKEN =\r\n  \"pk.eyJ1IjoianVsaWFydXNzaWFuZmVkZXJhdGlvbi\" +\r\n  \"IsImEiOiJjazJpbmIxeHUwbTY2M2NtbHpxYW4weGZzIn0.-GVUqir7oT7vVGOU6OokLA\";\r\n\r\nconst MapField = props => {\r\n  const { route } = props;\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 59.9342802,\r\n    longitude: 30.3350986,\r\n    zoom: 12,\r\n    bearing: 0,\r\n    pitch: 0,\r\n  });\r\n\r\n  let mapRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    if (route !== null) {\r\n      setTimeout(drawRoute, 1000, mapRef.current.getMap(), route);\r\n    }\r\n  }, [route]);\r\n\r\n  return (\r\n    <MapGL\r\n      ref={mapRef}\r\n      {...viewport}\r\n      width=\"auto\"\r\n      height=\"89vh\"\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v9\"\r\n      onViewportChange={setViewport}\r\n      mapboxApiAccessToken={MAPBOX_TOKEN}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    route: getRoute(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MapField);\r\n\r\ndocument.body.style.margin = 0;\r\n","import { createAction } from \"redux-actions\";\r\n\r\nexport const fetchForListOfAdresses = createAction(\"GET_LIST_OF_ADRESSES\");\r\nexport const fetchForListOfAdressesSuccess = createAction(\r\n  \"GET_LIST_OF_ADRESSES_SUCCESS\"\r\n);\r\nexport const fetchForListOfAdressesFail = createAction(\r\n  \"GET_LIST_OF_ADRESSES_FAIL\"\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport {\r\n  fetchForListOfAdressesSuccess,\r\n  fetchForListOfAdressesFail,\r\n} from \"./actions\";\r\n\r\nconst adresses = handleActions(\r\n  {\r\n    [fetchForListOfAdressesSuccess]: (_state, action) =>\r\n      action.payload.data.addresses,\r\n    [fetchForListOfAdressesFail]: () => null,\r\n  },\r\n  null\r\n);\r\n\r\nexport default adresses;\r\n","export const getAdresses = state => state.adresses;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./FornForPoints.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst InnerMap = props => {\r\n  const {\r\n    point,\r\n    handleOfChangePoint,\r\n    listOfObjects,\r\n    nameOfLabel,\r\n    mark,\r\n  } = props;\r\n\r\n  const [pointMy, setPointMy] = React.useState(\"\");\r\n\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (pointMy === \"\") {\r\n      setPointMy(point);\r\n    }\r\n    if (pointMy != null) {\r\n      setValue(pointMy);\r\n      setInputValue(pointMy);\r\n    }\r\n\r\n    if (listOfObjects.map(x => x.adress).indexOf(pointMy) !== -1) {\r\n      localStorage.setItem(mark, pointMy);\r\n      handleOfChangePoint(pointMy);\r\n    }\r\n  }, [point, pointMy]);\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n          setPointMy(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n          setPointMy(newInputValue);\r\n        }}\r\n        id=\"combo-box-demo\"\r\n        options={listOfObjects.map(x => x.adress)}\r\n        style={{ width: 300 }}\r\n        renderInput={params => (\r\n          <TextField {...params} label={nameOfLabel} variant=\"outlined\" />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InnerMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./FornForPoints.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getAdresses } from \"../../providers/redux/modules/adresses\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchForListOfAdresses } from \"../../providers/redux/modules/adresses\";\r\nimport InnerMap from \"./InnerMap\";\r\n\r\nconst FormForPoints = props => {\r\n  const [first_point, setFirstPoint] = useState(\"\");\r\n  const [second_point, setSecondPoint] = useState(\"\");\r\n  const [adressListWithKey, setAdressListWithKey] = useState([]);\r\n  const [\r\n    adressListWithKeyForFirstPoint,\r\n    setAdressListWithKeyForFirstPoint,\r\n  ] = useState([]);\r\n  const [\r\n    adressListWithKeyForSecondPoint,\r\n    setAdressListWithKeyForSecondPoint,\r\n  ] = useState([]);\r\n\r\n  const { getPointsFromForm, adressList, fetchForListOfAdresses } = props;\r\n\r\n  async function fetchAdresses() {\r\n    await fetchForListOfAdresses();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      localStorage.getItem(\"first_point\") != null &&\r\n      localStorage.getItem(\"second_point\") != null\r\n    ) {\r\n      setFirstPoint(localStorage.getItem(\"first_point\"));\r\n      setSecondPoint(localStorage.getItem(\"second_point\"));\r\n    }\r\n    if (adressList == null) {\r\n      fetchAdresses();\r\n    } else {\r\n      var resultOfMap = adressList.map((x, index) => {\r\n        return { adress: x, key: index };\r\n      });\r\n      setAdressListWithKey(resultOfMap.map(object => ({ ...object })));\r\n      setAdressListWithKeyForFirstPoint(\r\n        resultOfMap.map(object => ({ ...object }))\r\n      );\r\n      setAdressListWithKeyForSecondPoint(\r\n        resultOfMap.map(object => ({ ...object }))\r\n      );\r\n      if (first_point !== \"\" && first_point != null) {\r\n        setAdressListWithKeyForSecondPoint(\r\n          resultOfMap.filter(function(value) {\r\n            return value.adress !== first_point;\r\n          })\r\n        );\r\n        localStorage.setItem(\"first_point\", first_point);\r\n      }\r\n      if (second_point !== \"\" && second_point != null) {\r\n        setAdressListWithKeyForFirstPoint(\r\n          resultOfMap.filter(function(value) {\r\n            return value.adress !== second_point;\r\n          })\r\n        );\r\n        localStorage.setItem(\"second_point\", second_point);\r\n      }\r\n    }\r\n  }, [adressList, first_point, second_point]);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    getPointsFromForm({ first_point: first_point, second_point: second_point });\r\n  };\r\n\r\n  const handleFirstPointChange = event => {\r\n    setFirstPoint(event);\r\n  };\r\n\r\n  const handleSecondPointChange = event => {\r\n    setSecondPoint(event);\r\n  };\r\n\r\n  return (\r\n    <div className=\"divForForm\">\r\n      <form onSubmit={handleSubmit} className=\"formWithFields\">\r\n        <InnerMap\r\n          point={first_point}\r\n          handleOfChangePoint={handleFirstPointChange}\r\n          listOfObjects={adressListWithKeyForFirstPoint}\r\n          nameOfLabel=\"Точка А\"\r\n          mark=\"first_point\"\r\n        />\r\n        <br />\r\n        <InnerMap\r\n          point={second_point}\r\n          handleOfChangePoint={handleSecondPointChange}\r\n          listOfObjects={adressListWithKeyForSecondPoint}\r\n          nameOfLabel=\"Точка В\"\r\n          mark=\"second_point\"\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          value=\"Рассчитать маршрут\"\r\n          className=\"buttonForForm\"\r\n        >\r\n          Рассчитать маршрут\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    adressList: getAdresses(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchForListOfAdresses,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormForPoints);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GoToPersonalArea = () => {\r\n  return (\r\n    <div className=\"divForForm\">\r\n      <div className=\"warning\">\r\n        Перейдите в профиль и заполните данные карты\r\n      </div>\r\n      <Button\r\n        value=\"Перейти в профиль\"\r\n        className=\"buttonForWarning\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        component={Link}\r\n        to=\"/personal\"\r\n      >\r\n        Перейти в профиль\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoToPersonalArea;\r\n","export const getCardNumber = state => state.bankCard.number;\r\nexport const getCardValidity = state => state.bankCard.validity;\r\nexport const getCardOwner = state => state.bankCard.owner;\r\nexport const getCardCVC = state => state.bankCard.cvc;\r\nexport const getAllCard = state => state.bankCard;\r\n","import { createAction } from \"redux-actions\";\r\n\r\nexport const fetchBankCardInformation = createAction(\"GET_BANK_CARD_DATA\");\r\nexport const fetchBankCardInformationSuccess = createAction(\r\n  \"GET_BANK_CARD_DATA_SUCCESS\"\r\n);\r\nexport const fetchBankCardInformationFail = createAction(\r\n  \"GET_BANK_CARD_DATA_FAIL\"\r\n);\r\nexport const fetchRegistrateMyBankCard = createAction(\"REGISTRATE_BANK_CARD\");\r\nexport const fetchRegistrateMyBankCardSuccess = createAction(\r\n  \"REGISTRATE_BANK_CARD_SUCCESS\"\r\n);\r\nexport const fetchRegistrateMyBankCardFail = createAction(\r\n  \"REGISTRATE_BANK_CARD_FAIL\"\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  fetchBankCardInformationFail,\r\n  fetchBankCardInformationSuccess,\r\n  fetchRegistrateMyBankCardSuccess,\r\n  fetchRegistrateMyBankCardFail,\r\n} from \"./actions\";\r\n\r\nconst number = handleActions(\r\n  {\r\n    [fetchBankCardInformationSuccess]: (_state, action) =>\r\n      action.payload.data.cardNumber,\r\n    [fetchBankCardInformationFail]: () => null,\r\n    [fetchRegistrateMyBankCardSuccess]: (_state, action) =>\r\n      action.payload.cardNumber,\r\n    [fetchRegistrateMyBankCardFail]: () => null,\r\n  },\r\n  null\r\n);\r\n\r\nconst validity = handleActions(\r\n  {\r\n    [fetchBankCardInformationSuccess]: (_state, action) =>\r\n      action.payload.data.expiryDate,\r\n    [fetchBankCardInformationFail]: () => null,\r\n    [fetchRegistrateMyBankCardSuccess]: (_state, action) =>\r\n      action.payload.expiryDate,\r\n    [fetchRegistrateMyBankCardFail]: () => null,\r\n  },\r\n  null\r\n);\r\n\r\nconst owner = handleActions(\r\n  {\r\n    [fetchBankCardInformationSuccess]: (_state, action) =>\r\n      action.payload.data.cardName,\r\n    [fetchBankCardInformationFail]: () => null,\r\n    [fetchRegistrateMyBankCardSuccess]: (_state, action) =>\r\n      action.payload.cardName,\r\n    [fetchRegistrateMyBankCardFail]: () => null,\r\n  },\r\n  null\r\n);\r\n\r\nconst cvc = handleActions(\r\n  {\r\n    [fetchBankCardInformationSuccess]: (_state, action) =>\r\n      action.payload.data.cvc,\r\n    [fetchBankCardInformationFail]: () => null,\r\n    [fetchRegistrateMyBankCardSuccess]: (_state, action) => action.payload.cvc,\r\n    [fetchRegistrateMyBankCardFail]: () => null,\r\n  },\r\n  null\r\n);\r\n\r\nexport default combineReducers({\r\n  number,\r\n  validity,\r\n  owner,\r\n  cvc,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport MapField from \"./MapField\";\r\nimport { connect } from \"react-redux\";\r\nimport { getToken } from \"../../providers/redux/modules/auth\";\r\nimport {\r\n  getRoute,\r\n  fetchForRouteClean,\r\n} from \"../../providers/redux/modules/routes\";\r\nimport FormForPoints from \"./FormForPoints\";\r\nimport GoToPersonalArea from \"./GoToPersonalArea\";\r\nimport \"./FornForPoints.css\";\r\nimport { getAllCard } from \"../../providers/redux/modules/bankCard/selectors\";\r\nimport { fetchBankCardInformation } from \"../../providers/redux/modules/bankCard\";\r\nimport { fetchForRoute } from \"../../providers/redux/modules/routes\";\r\n\r\nconst Map = props => {\r\n  const {\r\n    token,\r\n    bankCard,\r\n    fetchBankCardInformation,\r\n    fetchForRoute,\r\n    fetchForRouteClean,\r\n    route,\r\n  } = props;\r\n  localStorage.setItem(\"accessToken\", token);\r\n\r\n  async function fetchBankCardData() {\r\n    await fetchBankCardInformation(token);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBankCardData();\r\n  }, [bankCard]);\r\n\r\n  const fetchForRouteRequest = async point => {\r\n    await fetchForRouteClean();\r\n    await fetchForRoute(point);\r\n  };\r\n\r\n  const getPointsFromForm = async point => {\r\n    fetchForRouteRequest(point);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <MapField />\r\n      <div className=\"divForFormOuter\">\r\n        {bankCard.number != null && bankCard.cvc != null ? (\r\n          <FormForPoints getPointsFromForm={getPointsFromForm} />\r\n        ) : (\r\n          <GoToPersonalArea />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: getToken(state),\r\n    bankCard: getAllCard(state),\r\n    route: getRoute(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBankCardInformation,\r\n  fetchForRoute,\r\n  fetchForRouteClean,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./PersonalArea.css\";\r\nimport {\r\n  fetchBankCardInformation,\r\n  fetchRegistrateMyBankCard,\r\n} from \"../../providers/redux/modules/bankCard\";\r\nimport { getToken } from \"../../providers/redux/modules/auth\";\r\nimport {\r\n  getCardNumber,\r\n  getCardValidity,\r\n  getCardOwner,\r\n  getCardCVC,\r\n} from \"../../providers/redux/modules/bankCard\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RHFInput } from \"react-hook-form-input\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst PersonalAreaForm = props => {\r\n  const {\r\n    fetchRegistrateMyBankCard,\r\n    token,\r\n    fetchBankCardInformation,\r\n    cardNumber,\r\n    validity,\r\n    owner,\r\n    cvc,\r\n  } = props;\r\n\r\n  const { register, handleSubmit, errors, reset, setValue } = useForm();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [flag, setFlag] = useState(false);\r\n  const [messageFromServer, setMessageFromServer] = useState(\"\");\r\n\r\n  async function fetchBankCardData() {\r\n    await fetchBankCardInformation(token);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (cardNumber == null) {\r\n      fetchBankCardData();\r\n    }\r\n    setValue(\"cardNumber\", cardNumber);\r\n    setValue(\"validity\", validity);\r\n    setValue(\"owner\", owner);\r\n    setValue(\"cvc\", cvc);\r\n    if (flag === true) {\r\n      if (cardNumber.length > 0 && validity.length > 0) {\r\n        setMessageFromServer(\"Регистрация банковской карты прошла успешно\");\r\n        setOpen(true);\r\n      } else {\r\n        setMessageFromServer(\"Не удалось зарегистрировать банковскую карту\");\r\n        setOpen(true);\r\n      }\r\n    }\r\n  }, [cardNumber, validity, owner, cvc, reset, setValue]);\r\n\r\n  const handleCardParams = async data => {\r\n    const { cardNumber, validity, owner, cvc } = data;\r\n\r\n    setFlag(true);\r\n\r\n    await fetchRegistrateMyBankCard({\r\n      cardNumber,\r\n      validity,\r\n      owner,\r\n      cvc,\r\n      token,\r\n    });\r\n    props.history.push(\"/personal\");\r\n  };\r\n\r\n  const handleCloseSnackBar = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const cardNumderChanging = e => {\r\n    const { value } = e.target;\r\n\r\n    if (!value) {\r\n      e.target.value = \"\";\r\n    }\r\n    const match =\r\n      value\r\n        .replace(/\\D/g, \"\")\r\n        .substring(0, 16)\r\n        .match(/.{1,4}/g) || [];\r\n    e.target.value = match.join(\" \");\r\n    setValue(\"cardNumber\", e.target.value);\r\n  };\r\n\r\n  const validityChanging = e => {\r\n    const { value } = e.target;\r\n    if (!value) {\r\n      e.target.value = \"\";\r\n    }\r\n    const match =\r\n      value\r\n        .replace(/\\D/g, \"\")\r\n        .substring(0, 4)\r\n        .match(/.{1,2}/g) || [];\r\n    e.target.value = match.join(\"/\");\r\n    setValue(\"validity\", e.target.value);\r\n  };\r\n\r\n  const ownerChanging = e => {\r\n    const { value } = e.target;\r\n    if (!value) {\r\n      e.target.value = \"\";\r\n    }\r\n    const match = value.replace(/\\d/g, \"\").toUpperCase();\r\n\r\n    setValue(\"owner\", match);\r\n  };\r\n\r\n  const cvcChanging = e => {\r\n    const { value } = e.target;\r\n    if (!value) {\r\n      e.target.value = \"\";\r\n    }\r\n    const match = value.replace(/\\D/g, \"\").substring(0, 3);\r\n    setValue(\"cvc\", match);\r\n  };\r\n\r\n  return (\r\n    <div className=\"commonDiv\">\r\n      <form className=\"myForm\" onSubmit={handleSubmit(handleCardParams)}>\r\n        <div className=\"divForFormPersonal\">\r\n          <div className=\"divForFormPersonalChild\">\r\n            <Card>\r\n              <RHFInput\r\n                as={\r\n                  <TextField\r\n                    label=\"Номер карты\"\r\n                    color=\"secondary\"\r\n                    type=\"text\"\r\n                    className=\"textField\"\r\n                    error={errors.cardNumber != null ? true : false}\r\n                  />\r\n                }\r\n                onChange={cardNumderChanging}\r\n                rules={{\r\n                  required: true,\r\n                  pattern: /^\\d{4} \\d{4} \\d{4} \\d{4}$/i,\r\n                }}\r\n                helperText={returnError(errors.cardNumber)}\r\n                name=\"cardNumber\"\r\n                register={register}\r\n                setValue={setValue}\r\n                data-testid=\"test_cardNumber_field\"\r\n              />\r\n              <RHFInput\r\n                as={\r\n                  <TextField\r\n                    label=\"Срок действия\"\r\n                    color=\"secondary\"\r\n                    type=\"text\"\r\n                    className=\"textField\"\r\n                    error={errors.validity != null ? true : false}\r\n                  />\r\n                }\r\n                rules={{\r\n                  required: true,\r\n                  pattern: /^(0[1-9]|1[0-2])\\/([0-9]{2})$/i,\r\n                }}\r\n                helperText={returnError(errors.validity)}\r\n                name=\"validity\"\r\n                onChange={validityChanging}\r\n                register={register}\r\n                setValue={setValue}\r\n                data-testid=\"test_validity_field\"\r\n              />\r\n            </Card>\r\n          </div>\r\n          <div className=\"divForFormPersonalChild\">\r\n            <Card>\r\n              <RHFInput\r\n                as={\r\n                  <TextField\r\n                    label=\"Имя владельца\"\r\n                    color=\"secondary\"\r\n                    type=\"text\"\r\n                    className=\"textField\"\r\n                    error={errors.owner != null ? true : false}\r\n                  />\r\n                }\r\n                onChange={ownerChanging}\r\n                rules={{ required: true, pattern: /^[A-Z]* [A-Z]*$/i }}\r\n                helperText={returnError(errors.owner)}\r\n                name=\"owner\"\r\n                register={register}\r\n                setValue={setValue}\r\n                data-testid=\"test_owner_field\"\r\n              />\r\n              <RHFInput\r\n                as={\r\n                  <TextField\r\n                    label=\"CVC\"\r\n                    color=\"secondary\"\r\n                    type=\"text\"\r\n                    className=\"textField\"\r\n                    error={errors.cvc != null ? true : false}\r\n                  />\r\n                }\r\n                onChange={cvcChanging}\r\n                rules={{ required: true, pattern: /^\\d{3}$/i }}\r\n                helperText={returnError(errors.cvc)}\r\n                name=\"cvc\"\r\n                register={register}\r\n                setValue={setValue}\r\n                data-testid=\"test_cvc_field\"\r\n              />\r\n            </Card>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\" value=\"Войти\" className=\"myButton\">\r\n          СОХРАНИТЬ\r\n        </Button>\r\n      </form>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={open}\r\n        onClose={handleCloseSnackBar}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\",\r\n        }}\r\n        message={<span id=\"message-id\">{messageFromServer}</span>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: getToken(state),\r\n    cardNumber: getCardNumber(state),\r\n    validity: getCardValidity(state),\r\n    owner: getCardOwner(state),\r\n    cvc: getCardCVC(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchRegistrateMyBankCard,\r\n  fetchBankCardInformation,\r\n};\r\n\r\nexport function returnError(error) {\r\n  return error !== undefined && error.type === \"required\"\r\n    ? \"Поле обязательно\"\r\n    : error !== undefined && error.type === \"pattern\"\r\n    ? \"Недопустимый формат\"\r\n    : null;\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalAreaForm);\r\n","import React from \"react\";\r\nimport PersonalAreaForm from \"./PersonalAreaForm\";\r\n\r\nexport const PersonalArea = props => {\r\n  return (\r\n    <>\r\n      <PersonalAreaForm {...props} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./Login.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchAuthRequest,\r\n  logoutUser,\r\n} from \"../../providers/redux/modules/auth\";\r\nimport { getAuthFlag } from \"../../providers/redux/modules/auth\";\r\nimport { getError } from \"../../providers/redux/modules/auth\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { RHFInput } from \"react-hook-form-input\";\r\n\r\nconst LoginForm = props => {\r\n  const { fetchAuthRequest, logoutUser, isAuthorized, error } = props;\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValue(\"login\", \"email@example.com\");\r\n    setValue(\"password\", \"password\");\r\n    if (isAuthorized === true) {\r\n      props.history.push(\"/map\");\r\n    }\r\n    if (error != null) {\r\n      setOpen(true);\r\n    }\r\n  }, [isAuthorized, error, setValue]);\r\n\r\n  if (props.goAway === true) {\r\n    if (window.confirm(\"Вы уверены, что хотите выйти?\")) {\r\n      logoutUser();\r\n      localStorage.removeItem(\"accessToken\");\r\n      localStorage.removeItem(\"first_point\");\r\n      localStorage.removeItem(\"second_point\");\r\n      return <Redirect to=\"/login\" />;\r\n    } else {\r\n      return <Redirect to=\"/map\" />;\r\n    }\r\n  }\r\n\r\n  const handleLogIn = async data => {\r\n    const { login, password } = data;\r\n\r\n    await fetchAuthRequest({ login, password });\r\n  };\r\n\r\n  const goToRegistration = event => {\r\n    event.preventDefault();\r\n    props.history.push(\"/registration\");\r\n  };\r\n\r\n  const handleCloseSnackBar = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"divForForm\">\r\n      <Card className=\"cardForForm\">\r\n        <form onSubmit={handleSubmit(handleLogIn)}>\r\n          <RHFInput\r\n            as={\r\n              <TextField\r\n                className=\"textFieldForLoginForm\"\r\n                label=\"Логин\"\r\n                color=\"secondary\"\r\n                type=\"text\"\r\n                error={errors.login != null ? true : false}\r\n              />\r\n            }\r\n            rules={{\r\n              required: true,\r\n              pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/i,\r\n            }}\r\n            helperText={returnError(errors.login)}\r\n            name=\"login\"\r\n            register={register}\r\n            setValue={setValue}\r\n          />\r\n          <br />\r\n          <RHFInput\r\n            as={\r\n              <TextField\r\n                label=\"Пароль\"\r\n                color=\"secondary\"\r\n                type=\"text\"\r\n                className=\"textFieldForLoginForm\"\r\n                error={errors.password != null ? true : false}\r\n              />\r\n            }\r\n            helperText={returnError(errors.password)}\r\n            rules={{ required: true }}\r\n            name=\"password\"\r\n            register={register}\r\n            setValue={setValue}\r\n          />\r\n          <br />\r\n          {/*<TextField\r\n            className=\"textFieldForLoginForm\"\r\n            label=\"Логин\"\r\n            color=\"secondary\"\r\n            type=\"text\"\r\n            name=\"login\"\r\n            error={errors.login != null ? true : false}\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/i,\r\n            })}\r\n            helperText={returnError(errors.login)}\r\n            setValue={setValue}\r\n          />\r\n          <br />\r\n          <TextField\r\n            label=\"Пароль\"\r\n            color=\"secondary\"\r\n            type=\"text\"\r\n            name=\"password\"\r\n            className=\"textFieldForLoginForm\"\r\n            inputRef={register({ required: true })}\r\n            error={errors.password != null ? true : false}\r\n            helperText={returnError(errors.password)}\r\n          />\r\n          <br />*/}\r\n          <Button type=\"submit\" value=\"Войти\">\r\n            Войти\r\n          </Button>\r\n        </form>\r\n        <Button onClick={goToRegistration}>Перейти на регистрацию</Button>\r\n      </Card>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={open}\r\n        onClose={handleCloseSnackBar}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\",\r\n        }}\r\n        message={<span id=\"message-id\">{error}</span>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = { fetchAuthRequest, logoutUser };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthorized: getAuthFlag(state),\r\n    error: getError(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\nexport function returnError(error) {\r\n  return error !== undefined && error.type === \"required\"\r\n    ? \"Поле обязательно\"\r\n    : error !== undefined && error.type === \"pattern\"\r\n    ? \"Недопустимый формат\"\r\n    : null;\r\n}\r\n","import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport const Login = props => {\r\n  return (\r\n    <>\r\n      <LoginForm {...props} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Registration.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchRegistrationRequest } from \"../../providers/redux/modules/auth\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { returnError } from \"../login/LoginForm\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { getError } from \"../../providers/redux/modules/auth\";\r\nimport { getAuthFlag } from \"../../providers/redux/modules/auth\";\r\n\r\nconst RegistrationForm = props => {\r\n  const { fetchRegistrationRequest, error, isAuthorized } = props;\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAuthorized === true) {\r\n      props.history.push(\"/map\");\r\n    }\r\n    if (error != null) {\r\n      setOpen(true);\r\n    }\r\n  }, [isAuthorized, error, open]);\r\n\r\n  const handleRegistration = async data => {\r\n    try {\r\n      const { login, password, firstname, lastname } = data;\r\n\r\n      await fetchRegistrationRequest({\r\n        email: login,\r\n        password: password,\r\n        name: firstname,\r\n        surname: lastname,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleCloseSnackBar = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"divForForm\">\r\n      <Card className=\"cardForForm\">\r\n        <form onSubmit={handleSubmit(handleRegistration)}>\r\n          <TextField\r\n            id=\"standard-secondary\"\r\n            label=\"Логин\"\r\n            color=\"secondary\"\r\n            type=\"text\"\r\n            name=\"login\"\r\n            error={errors.login != null ? true : false}\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/i,\r\n            })}\r\n            data-testid=\"test_login_field\"\r\n            helperText={returnError(errors.login)}\r\n          />\r\n          <TextField\r\n            id=\"standard-secondary\"\r\n            label=\"Пароль\"\r\n            color=\"secondary\"\r\n            type=\"text\"\r\n            name=\"password\"\r\n            data-testid=\"test_password_field\"\r\n            error={errors.password != null ? true : false}\r\n            inputRef={register({ required: true })}\r\n            helperText={returnError(errors.password)}\r\n          />\r\n          <TextField\r\n            id=\"standard-secondary\"\r\n            label=\"Фамилия\"\r\n            color=\"secondary\"\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            data-testid=\"test_lastname_field\"\r\n            error={errors.lastname != null ? true : false}\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: /^[а-яА-ЯёЁa-zA-Z '.-]*$/i,\r\n            })}\r\n            helperText={returnError(errors.lastname)}\r\n          />\r\n          <TextField\r\n            id=\"standard-secondary\"\r\n            label=\"Имя\"\r\n            color=\"secondary\"\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            data-testid=\"test_firstname_field\"\r\n            error={errors.firstname != null ? true : false}\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: /^[а-яА-ЯёЁa-zA-Z '.-]*$/i,\r\n            })}\r\n            helperText={returnError(errors.firstname)}\r\n          />\r\n          <div>\r\n            <Button type=\"submit\" value=\"\">\r\n              Регистрация\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={open}\r\n        onClose={handleCloseSnackBar}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\",\r\n        }}\r\n        message={<span id=\"message-id\">{error}</span>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = { fetchRegistrationRequest };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthorized: getAuthFlag(state),\r\n    error: getError(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React from \"react\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\n\r\nexport const Registration = props => {\r\n  return (\r\n    <>\r\n      <RegistrationForm {...props} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  component: RouteComponent,\r\n  isAuthorized,\r\n  loginPath,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={routeProps =>\r\n      isAuthorized ? (\r\n        <RouteComponent {...routeProps} />\r\n      ) : (\r\n        <Redirect to={loginPath} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport Map from \"./map/Map\";\r\nimport { PersonalArea } from \"./personal_area\";\r\nimport { Login } from \"./login\";\r\nimport { Registration } from \"./registration\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAuthFlag } from \"../providers/redux/modules/auth\";\r\n\r\nconst ChoosePage = props => {\r\n  const { isAuthorized } = props;\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <PrivateRoute\r\n          path=\"/map\"\r\n          component={Map}\r\n          exact\r\n          isAuthorized={isAuthorized}\r\n          loginPath=\"/login\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/personal\"\r\n          component={PersonalArea}\r\n          exact\r\n          isAuthorized={isAuthorized}\r\n          loginPath=\"/login\"\r\n        />\r\n        <Route path=\"/registration\" component={Registration} exact />\r\n        <Route path=\"/login\" component={Login} exact />\r\n        <Route\r\n          path=\"/logout\"\r\n          render={props => <Login {...props} goAway={true} />}\r\n          exact\r\n        />\r\n        <Route path=\"/\" component={isAuthorized == true ? Map : Login} exact />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthorized: getAuthFlag(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChoosePage);\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Header from \"./header/Header\";\r\nimport ChoosePage from \"./pages/ChoosePage\";\r\n\r\nconst App = () => {\r\n  const [showPage, setShowPage] = useState(4);\r\n\r\n  const showMapEvent = idOfButton => {\r\n    switch (idOfButton) {\r\n      case \"my-map\":\r\n        setShowPage(0);\r\n        break;\r\n      case \"personal-area\":\r\n        setShowPage(1);\r\n        break;\r\n      case \"logout\":\r\n        setShowPage(2);\r\n        break;\r\n\r\n      case \"registration\":\r\n        setShowPage(3);\r\n        break;\r\n      case \"login\":\r\n        setShowPage(4);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <ChoosePage />\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport bankCard from \"./bankCard\";\r\nimport adresses from \"./adresses\";\r\nimport route from \"./routes\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  bankCard,\r\n  adresses,\r\n  route,\r\n});\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { fetchAuthRequest, fetchAuthSucces, fetchAuthFailure } from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport function* authorizationSaga() {\r\n  yield takeEvery(fetchAuthRequest, authGeneratorFunction);\r\n}\r\n\r\nexport function* authGeneratorFunction(action) {\r\n  try {\r\n    const { login, password } = action.payload;\r\n\r\n    const result = yield call(fetchAuthRequestFirst, login, password);\r\n\r\n    if (result.data.success === true) {\r\n      yield put(fetchAuthSucces(result));\r\n    } else {\r\n      yield put(fetchAuthFailure(result.data.error));\r\n    }\r\n  } catch (error) {\r\n    put(fetchAuthFailure(error));\r\n  }\r\n}\r\n\r\nexport const fetchAuthRequestFirst = (login, password) => {\r\n  const res = axios.post(\r\n    \"https://loft-taxi.glitch.me/auth\",\r\n    { email: login, password: password },\r\n    { headers: { \"Content-Type\": \"application/json\" } }\r\n  );\r\n  return res;\r\n};\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  fetchRegistrationRequest,\r\n  fetchRegistrationFailure,\r\n  fetchRegistrationSucces,\r\n} from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport function* registrationSaga() {\r\n  yield takeEvery(fetchRegistrationRequest, registratinGenerator);\r\n}\r\n\r\nexport function* registratinGenerator(action) {\r\n  try {\r\n    const { email, password, name, surname } = action.payload;\r\n\r\n    const result = yield call(\r\n      fetchRegistrationRequestFirst,\r\n      email,\r\n      password,\r\n      name,\r\n      surname\r\n    );\r\n\r\n    if (result.data.success === true) {\r\n      yield put(fetchRegistrationSucces(result));\r\n    } else {\r\n      yield put(fetchRegistrationFailure(result.data.error));\r\n    }\r\n  } catch (error) {\r\n    put(fetchRegistrationFailure(error));\r\n  }\r\n}\r\n\r\nexport const fetchRegistrationRequestFirst = (\r\n  email,\r\n  password,\r\n  name,\r\n  surname\r\n) => {\r\n  const res = axios.post(\r\n    \"https://loft-taxi.glitch.me/register\",\r\n    { email: email, password: password, name: name, surname: surname },\r\n    { headers: { \"Content-Type\": \"application/json\" } }\r\n  );\r\n  return res;\r\n};\r\n","import {\r\n  fetchBankCardInformation,\r\n  fetchBankCardInformationFail,\r\n  fetchBankCardInformationSuccess,\r\n  fetchRegistrateMyBankCard,\r\n  fetchRegistrateMyBankCardFail,\r\n  fetchRegistrateMyBankCardSuccess,\r\n} from \"./actions\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nexport function* paymentSaga() {\r\n  yield takeEvery(fetchRegistrateMyBankCard, geteratorForPaymentSaga);\r\n\r\n  yield takeEvery(\r\n    fetchBankCardInformation,\r\n    generatorForPaymentSagaGetInformation\r\n  );\r\n}\r\n\r\nexport function* generatorForPaymentSagaGetInformation(action) {\r\n  try {\r\n    const { token } = action.payload;\r\n    const result = yield call(\r\n      fetchBankCardInformationGetInfoAxios,\r\n      action.payload\r\n    );\r\n    if (result.status === 200) {\r\n      yield put(fetchBankCardInformationSuccess(result));\r\n    } else yield put(fetchBankCardInformationFail(result.data.error));\r\n  } catch (error) {\r\n    fetchBankCardInformationFail(error);\r\n  }\r\n}\r\n\r\nexport function* geteratorForPaymentSaga(action) {\r\n  try {\r\n    const { cardNumber, validity, owner, cvc, token } = action.payload;\r\n    const result = yield call(\r\n      fetchBankCardInformationRegistrateAxios,\r\n      cardNumber,\r\n      validity,\r\n      owner,\r\n      cvc,\r\n      token\r\n    );\r\n    if (result.status === 200) {\r\n      const json_result = JSON.parse(result.config.data);\r\n\r\n      yield put(fetchRegistrateMyBankCardSuccess(json_result));\r\n    }\r\n  } catch (error) {\r\n    put(fetchRegistrateMyBankCardFail(error));\r\n  }\r\n}\r\n\r\nexport const fetchBankCardInformationRegistrateAxios = async (\r\n  cardNumber,\r\n  expiryDate,\r\n  cardName,\r\n  cvc,\r\n  token\r\n) => {\r\n  return await axios.post(\r\n    \"https://loft-taxi.glitch.me/card\",\r\n    {\r\n      cardNumber,\r\n      expiryDate,\r\n      cardName,\r\n      cvc,\r\n      token,\r\n    },\r\n    {\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n  );\r\n};\r\n\r\nexport const fetchBankCardInformationGetInfoAxios = async token => {\r\n  return await axios.get(\"https://loft-taxi.glitch.me/card?token=\" + token);\r\n};\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  fetchForListOfAdresses,\r\n  fetchForListOfAdressesSuccess,\r\n  fetchForListOfAdressesFail,\r\n} from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport function* addressListSaga() {\r\n  yield takeEvery(fetchForListOfAdresses, generatorForAdressList);\r\n}\r\n\r\nexport function* generatorForAdressList() {\r\n  try {\r\n    const result = yield call(fetchAdressListAxios);\r\n    if (result.status === 200) {\r\n      yield put(fetchForListOfAdressesSuccess(result));\r\n    } else {\r\n      yield put(fetchForListOfAdressesFail());\r\n    }\r\n  } catch (error) {\r\n    put(fetchForListOfAdressesFail());\r\n  }\r\n}\r\n\r\nexport const fetchAdressListAxios = async () => {\r\n  return await axios.get(\"https://loft-taxi.glitch.me/addressList\");\r\n};\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  fetchForRoute,\r\n  fetchForRouteSuccess,\r\n  fetchForRouteFail,\r\n  fetchForRouteClean,\r\n  fetchForRouteCleanSuccess,\r\n} from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport function* routeSaga() {\r\n  yield takeEvery(fetchForRoute, generatorForRoute);\r\n  yield takeEvery(fetchForRouteClean, generatorForCleanRoute);\r\n}\r\n\r\nexport function* generatorForRoute(action) {\r\n  try {\r\n    const result = yield call(\r\n      fetchForRouteAxios,\r\n      action.payload.first_point,\r\n      action.payload.second_point\r\n    );\r\n    if (result.status === 200) {\r\n      yield put(fetchForRouteSuccess(result));\r\n    } else {\r\n      yield put(fetchForRouteFail());\r\n    }\r\n  } catch (error) {\r\n    put(fetchForRouteFail());\r\n  }\r\n}\r\n\r\nexport function* generatorForCleanRoute() {\r\n  try {\r\n    yield put(fetchForRouteCleanSuccess());\r\n  } catch (error) {\r\n    put(fetchForRouteFail(error));\r\n  }\r\n}\r\n\r\nexport const fetchForRouteAxios = async (point1, point2) => {\r\n  return await axios.get(\r\n    `https://loft-taxi.glitch.me/route?address1=${point1}&address2=${point2}`\r\n  );\r\n};\r\n","import { authorizationSaga } from \"./auth/authorizationSaga \";\r\nimport { all } from \"redux-saga/effects\";\r\nimport { registrationSaga } from \"./auth/registrationSaga\";\r\nimport { paymentSaga } from \"./bankCard/paymentSaga\";\r\nimport { addressListSaga } from \"./adresses/addressListSaga\";\r\nimport { routeSaga } from \"./routes/routeSaga\";\r\n\r\nexport default function* Sagas() {\r\n  yield all([\r\n    authorizationSaga(),\r\n    registrationSaga(),\r\n    paymentSaga(),\r\n    addressListSaga(),\r\n    routeSaga(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { loftTaxiMiddlewareForBankCard } from \"./modules/bankCard\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./modules\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport Sagas from \"./modules/saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const initialState = {\r\n  auth: {\r\n    token:\r\n      localStorage.getItem(\"accessToken\") == undefined\r\n        ? null\r\n        : localStorage.getItem(\"accessToken\"),\r\n    isAuthorized:\r\n      localStorage.getItem(\"accessToken\") == undefined ? false : true,\r\n    error: null,\r\n  },\r\n  bankCard: {\r\n    number: null,\r\n    validity: null,\r\n    owner: null,\r\n    cvc: null,\r\n  },\r\n  adresses: null,\r\n  route: null,\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(thunk), applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(Sagas);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { theme } from \"loft-taxi-mui-theme\"; // Импортируем саму тему\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport store from \"./providers/redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n//const state = store.getState();\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}